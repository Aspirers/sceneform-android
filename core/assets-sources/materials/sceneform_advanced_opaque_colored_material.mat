material {
    "name" : "Opaque Colored",

    "parameters" : [
        {
           "type" : "float3",
           "name" : "color"
        },
        {
           "type" : "float",
           "name" : "metallic"
        },
        {
            "type" : "float",
            "name" : "roughness"
        },
        {
            "type" : "float",
            "name" : "reflectance"
        },
        {
            "type" : "float3",
            "name" : "sheenColor"
        },
        {
            "type" : "float",
            "name" : "sheenRoughness"
        },
        {
            "type" : "float",
            "name" : "clearCoat"
        },
        {
            "type" : "float",
            "name" : "clearCoatRoughness"
        },
        {
            "type" : "float",
            "name" : "anisotropy"
        },
        {
            "type" : "float4",
            "name" : "emissive"
            
        }
    ],
    "requires" : [
        "position",
        "uv0"
    ],
    "shadingModel" : "lit",
    "blending" : "opaque",
    "specularAntiAliasing" : true
}
fragment {
    void material(inout MaterialInputs material) {
        prepareMaterial(material);
        material.baseColor.rgb = materialParams.color;
        material.metallic = materialParams.metallic;
        material.roughness = materialParams.roughness;
        
        if(materialParams.reflectance != -1.0) {
            material.reflectance = materialParams.reflectance;
        }
        
        if(materialParams.sheenColor.r != -1.0) {
            material.sheenColor = materialParams.sheenColor;
        }
        
        if(materialParams.anisotropy != -1.0) {
            material.anisotropy = materialParams.anisotropy;
        }
        
        if(materialParams.clearCoat != -1.0) {
            material.clearCoat = materialParams.clearCoat;
        }
        
        if(materialParams.clearCoatRoughness != -1.0) {
            material.clearCoatRoughness = materialParams.clearCoatRoughness;
        }
    }
}
